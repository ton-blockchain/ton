name: MacOS-14 TON build (shared, arm64)

on: [push,workflow_dispatch,workflow_call]

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Date Stamp
        shell: bash
        id: date-stamp
        run: |
          echo "timestamp=$(date -u "+%Y%m%d%H%M_%S")" >> "$GITHUB_OUTPUT"

      - name: Setup build environment
        run: |
          # Install dependencies using brew bundle
          cat <<EOF | brew bundle install --no-upgrade --file=-
          brew "ccache"
          brew "ninja"
          brew "libsodium"
          brew "libmicrohttpd"
          brew "pkg-config"
          brew "automake"
          brew "libtool"
          brew "autoconf"
          brew "gnutls"
          brew "llvm@16"
          brew "openssl@3"
          brew "lz4"
          brew "zlib"
          EOF
          mkdir -p ~/.ccache

      # Improved cache with better restore keys
      - name: Restore ccache
        uses: actions/cache/restore@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ runner.arch }}-macos-14-shared-ccache-${{ steps.date-stamp.outputs.timestamp }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-macos-14-shared-ccache-
            ${{ runner.os }}-${{ runner.arch }}-shared-ccache-

      - name: Build TON
        run: |
          git submodule sync --recursive
          git submodule update
          cp assembly/native/build-macos-shared.sh .
          chmod +x build-macos-shared.sh
          ./build-macos-shared.sh -t -c -o 14.0
          ccache -sp

      - name: Save ccache
        uses: actions/cache/save@v4
        if: always()  # Save cache even if build fails
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ runner.arch }}-macos-14-shared-ccache-${{ steps.date-stamp.outputs.timestamp }}

      # Run tests in parallel with reduced timeout for faster feedback
      - name: Run Tests
        run: |
          cd build        
          ctest --output-on-failure --timeout 1800 --parallel $(sysctl -n hw.ncpu)
